{"version":3,"sources":["services/base.js","services/index.js","Components/LoginForm/LoginForm.jsx","Components/Menu/Menu.jsx","Components/BackgroundWithOverlay/BackgroundWithOverlay.jsx","Components/Landing/Landing.jsx","Components/SignUp/Signup.jsx","Components/Loading/Loading.js","Components/Messages/Welcome.jsx","Components/Account/Zones/Zones.jsx","Components/Account/Account.jsx","Containers/LoginPage/Login.jsx","Components/test-tasks/addTask.jsx","Components/test-tasks/taskList.jsx","Components/test-tasks/SmartTasks.jsx","Containers/TaskPage/Task.jsx","Components/css/navBar.jsx","Components/test-tasks/EditTaskZone.jsx","Components/test-tasks/editTask.jsx","Components/test-tasks/deleteTask.jsx","Components/css/styling.jsx","App.js","serviceWorker.js","history.js","index.js"],"names":["baseURL","console","log","service","axios","create","withCredentials","actions","isLoggedIn","_isLoggedIn","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","get","abrupt","sent","stop","apply","this","arguments","signUp","_signUp","_callee2","user","_context2","post","_x","logIn","_logIn","_callee3","_context3","_x2","logOut","_logOut","_callee4","_context4","LoginForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInput","e","setState","defineProperty","target","name","value","handleFormSubmit","event","preventDefault","state","email","password","then","response","setUser","data","history","push","fetchData","setFlashMessage","catch","err","toggleLoginButtonOff","classesAndIds","formType","values","labels","formClassName","formGroupEmailId","formGroupEmailClass","formGroupPassword","formGroupPasswordClass","formButtonClass","objectSpread","String","react_default","createElement","Fragment","Form","className","onSubmit","Group","controlId","Label","Control","style","width","type","placeholder","defaultValue","onChange","Button","borderRadius","backgroundColor","borderColor","react_router_dom","to","Component","React","BackgroundWithOverlay","background","backgroundImage","imgUrl","position","top","left","height","zIndex","backgroundSize","backgroundRepeat","overlay","alpha","Landing","Jumbotron","lib","Signup","handleChange","handleSignUpForm","username","Math","floor","random","Axios","concat","Container","paddingTop","loading","Welcome","message","userObj","firstName","welcome","Zones","handleZoneUpdate","location","updateZones","zones","home","address","lat","lng","work","clearHandleZoneChange","handleSelect","geocodeByAddress","results","getLatLng","latLng","error","ready","_this2","Row","Col","zoneName","dist_default","onSelect","_ref","getInputProps","suggestions","getSuggestionItemProps","FormLabel","toUpperCase","InputGroup","FormControl","Append","variant","onClick","index_es","icon","faSave","faStopCircle","map","suggestion","active","cursor","description","Account","handleUsernameUpdate","update","handleNameUpdate","lastName","Zones_Zones","Login","checkIfUser","LoginForm_LoginForm","assign","addTask","handleAddTask","title","duration","filterList","showAddTaskMenu","_event$target","taskInput","createRef","current","focus","required","aria-label","aria-describedby","ref","TaskList","deleteTask","taskID","completeTask","status","res","displayAllTasks","filterTaskList","task","key","_id","xs","margin","faCheck","faEllipsisV","faTrash","addTaskMenu","window","scrollTo","sm","addTask_addTask","SmartTasks","Card","Body","Title","Text","filterDuration","showHomeAlert","filterHomeTasks","showWorkAlert","filterWorkTasks","Task","id","searchTasksInput","faCloud","listItem","faHome","faBriefcase","taskList_TaskList","userLocation","distanceFunction","SmartTasks_SmartTasks","setFeedbackMessage","showDurationAlert","NavBar","hideButton","src","alt","logout","faUser","EditTaskZone","showZoneInput","selectZone","disabled","EditTask","handleUpdateTask","zone","date","match","params","toggleShowZoneInput","setDuration","time","setStatus","handleDateChange","_this3","faList","EditTaskZone_EditTaskZone","react_datepicker_min_default","selected","autoComplete","FormGroup","delete","Loading_Loading_loading","Style","App","checkUserDistance","latitude","longitude","countHomeAlert","countWorkAlert","getUserLocation","navigator","geolocation","getCurrentPosition","coords","enableHighAccuracy","maximumAge","timeout","lat1","lon1","lat2","lon2","unit","radlat1","PI","radlat2","theta","radtheta","dist","sin","cos","acos","filteredTasks","toConsumableArray","listOfTasks","filter","eachTask","countDurationAlert","arg","getUser","setTimeout","apiIsAwake","taskDataIsReady","tag","toLowerCase","includes","userLoggedIn","itIsSuccess","successMsg","errorMsg","searchTaskInput","currentSearchValue","navBar_NavBar","Alert","react_router","exact","path","render","styling_Style","Landing_Landing_Landing","Signup_Signup","LoginPage_Login_Login","Account_Account_Account","TaskPage_Task_Task","editTask","deleteTask_deleteTask","Boolean","hostname","createBrowserHistory","ReactDOM","basename","process","src_App_0","document","getElementById","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.e6f02068.chunk.js","sourcesContent":["let baseURL;\n\nprocess.env.NODE_ENV === \"production\"\n  ? //? (baseURL = 'here should be your production endpoint')\n    (baseURL = \"https://cloudtaskr.herokuapp.com\")\n  : (baseURL = \"http://localhost:5000\");\n\n  export default baseURL","import axios from \"axios\";\nimport baseURL from \"./base\";\n// let baseURL;\nconsole.log(baseURL);\n// process.env.NODE_ENV === \"production\"\n//   ? //? (baseURL = 'here should be your production endpoint')\n//     (baseURL = window.location.origin)\n//   : (baseURL = \"http://localhost:5000\");\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst actions = {\n  isLoggedIn: async () => {\n    return await service.get(\"/api/isLoggedIn\");\n  },\n  signUp: async user => {\n    return await service.post(\"/api/signup\", user);\n  },\n  logIn: async user => {\n    return await service.post(\"/api/login\", user);\n  },\n  logOut: async () => {\n    return await service.get(\"/api/logout\");\n  }\n};\n\nexport default actions;\n\n/**\n * import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  //? (baseURL = 'here should be your production endpoint')\n  ? (baseURL = window.location.origin)\n  : (baseURL = 'http://localhost:5000');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst actions = {\n  isLoggedIn: async () => {\n    return await service.get('/is-logged-in');\n  },\n  signUp: async (user) => {\n    return await service.post('/signup', user);\n  },\n  logIn: async (user) => {\n    return await service.post('/login', user);\n  },\n  logOut: async () => {\n    return await service.get('/logout');\n  }\n};\n\nexport default actions;\n\n */\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n// import Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n// Custom Components\n// import baseURL from \"../../services/base\";\nimport actions from \"../../services/index\";\n\n// Styling\nimport \"../Login/Login.css\";\n\nexport default class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: String,\n      password: String,\n      classesAndIds: {},\n      labels: true\n    };\n  }\n\n  componentDidMount() {\n    this.classesAndIds(this.props.formType);\n  }\n  handleInput = e => this.setState({ [e.target.name]: e.target.value });\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.email) {\n      let user = {\n        email: this.state.email,\n        password: this.state.password\n      };\n\n      // Axios.post(`${baseURL}/api/login`, user, {\n      //   withCredentials: true\n      // })\n      actions\n        .logIn(user)\n        .then(response => {\n          // console.log(\"handleFormSubmit\");\n          this.setState({\n            email: \"\",\n            password: \"\"\n          });\n          this.props.setUser(response.data);\n          this.props.history.push(\"/task\");\n          this.props.fetchData();\n          this.props.setFlashMessage(\"Login successful\", true);\n        })\n        .catch(err => {\n          // console.log(err);\n        });\n    } else {\n      // figure out how to flash message\n      // console.log(\"please input both email and password\");\n      this.toggleLoginButtonOff();\n    }\n  };\n  //   form-class-name, formGroupEmailId, formGroupEmailClass, formGroupPasswordId, formGroupPasswordClass\n  classesAndIds = formType => {\n    let values, labels;\n    if (formType === \"menu\") {\n      values = {\n        formClassName: \"menu-login-form\",\n        formGroupEmailId: \"menuEmail\",\n        formGroupEmailClass: \"menu-form-el\",\n        formGroupPassword: \"menuPassword\",\n        formGroupPasswordClass: \"menu-form-el\",\n        formButtonClass: \"menu-form-el delay-show\"\n      };\n      labels = false;\n    } else if (formType === \"form\") {\n      values = {\n        formClassName: \"login-form\",\n        formGroupEmailId: \"loginFormEmail\",\n        formGroupEmailClass: \"login-form-el\",\n        formGroupPassword: \"loginPassword\",\n        formGroupPasswordClass: \"login-form-el\",\n        formButtonClass: \"\"\n      };\n      labels = true;\n    }\n    this.setState({\n      classesAndIds: { ...values },\n      labels: labels\n    });\n  };\n  render() {\n    let styles = {\n      borderRadius: \"20px\",\n  backgroundColor: \"#2F0152\",\n  borderColor: \"#2F0152\",\n  width: \"100px\"\n    }\n    return (\n      <>\n        <Form\n          className={this.state.classesAndIds.formClassName}\n          onSubmit={this.handleFormSubmit}\n        >\n          <Form.Group\n            controlId={this.state.classesAndIds.formGroupEmailId}\n            className={this.state.classesAndIds.formGroupEmailClass}\n          >\n            {this.state.labels && <Form.Label>Email</Form.Label>}\n            <Form.Control style={{width:\"500px\"}}\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter email\"\n              defaultValue={this.state.email}\n              onChange={this.handleInput}\n            />\n          </Form.Group>\n\n          <Form.Group\n            controlId={this.state.classesAndIds.formGroupPassword}\n            className={this.state.classesAndIds.formGroupPasswordClass}\n          >\n            {this.state.labels && <Form.Label>Password</Form.Label>}\n            <Form.Control style={{width:\"500px\"}}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              defaultValue={this.state.password}\n              onChange={this.handleInput}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Button style={styles}\n              className={this.state.classesAndIds.formButtonClass}\n              type=\"submit\"\n            >\n              Login\n            </Button>\n            <Link to=\"/signup\">Don't have an account? Sign up</Link>\n          </Form.Group>\n        </Form>\n      </>\n    );\n  }\n}\n","// components\n/* eslint-disable */\nimport React from \"react\";\nimport Axios from \"axios\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport baseURL from \"../../services/base\";\n\n// Custom Components\nimport LoginForm from \"../LoginForm/LoginForm\";\n\n// Styles\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"./Menu.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faTasks,\n  faSignOutAlt,\n  faWalking\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      hideButton: false\n    };\n  }\n  toggleLoginButton = e => {\n    let loginSection = document.getElementById(\"login-form\");\n    let toggle = !this.state.hideButton;\n    this.setState({ hideButton: toggle });\n\n    loginSection.classList.remove(\"hidden\");\n    loginSection.classList.add(\"reveal\");\n  };\n\n  toggleLoginButtonOff = e => {\n    let loginSection = document.getElementById(\"login-form\");\n    let toggle = !this.state.hideButton;\n    this.setState({ hideButton: toggle });\n\n    loginSection.classList.remove(\"reveal\");\n    loginSection.classList.add(\"hidden\");\n  };\n\n  handleLoginForm = event => {\n    event.preventDefault();\n\n    if (this.state.email) {\n      let user = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      // console.log(user);\n\n      Axios.post(`${baseURL}/api/login`, user, {\n        withCredentials: true\n      })\n        .then(response => {\n          // console.log(\"handleFormSubmit\");\n          this.setState({\n            email: \"\",\n            password: \"\"\n          });\n          this.props.setUser(response.data);\n          this.props.fetchData();\n          this.props.setFlashMessage(\"Login successful\", true);\n          this.props.history.push(\"/task\");\n        })\n        .catch(err => {\n          // this.props.setFlashMessage(\"Login failed\", false)\n          console.log(err);\n        });\n    } else {\n      // figure out how to flash message\n      console.log(\"please input both email and password\");\n      this.toggleLoginButtonOff();\n    }\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  logoStyle = { width: \"160px\" };\n  render() {\n    return (\n      <Navbar bg=\"info\" variant=\"dark\" id={this.props.id}>\n        {/* left side navbar */}\n        <LinkContainer to=\"/\">\n          <Navbar.Brand id=\"logo\">\n            <img src=\"/images/logo.png\" style={this.logoStyle} />\n          </Navbar.Brand>\n        </LinkContainer>\n        <Nav className=\"mr-auto\">\n          {/* <LinkContainer to=\"/\">\n            <Nav.Link>Home</Nav.Link>\n          </LinkContainer> */}\n          {!this.props.userObj && (\n            <LinkContainer to=\"/\">\n              <Nav.Link>Home</Nav.Link>\n            </LinkContainer>\n          )}\n        </Nav>\n\n        {/* right side navbar */}\n        {/* condition ? (true) : (false) */}\n        {this.props.userObj ? (\n          <Nav id=\"logged-right-nav\">\n            <ul id=\"logged-right-list\" className=\"fa-ul\">\n              <li className=\"logged-items\">\n                <LinkContainer to=\"/account\">\n                  <Nav.Link className=\"sign-up\">\n                    <h5 style={{ color: \"white\" }}>\n                      <FontAwesomeIcon icon={faUser} listItem />{\" \"}\n                      {this.props.userObj.username}\n                    </h5>\n                  </Nav.Link>\n                </LinkContainer>\n              </li>\n              <li className=\"logged-items\">\n                <LinkContainer to=\"/task\">\n                  <Nav.Link className=\"sign-up\">\n                    <h5 style={{ color: \"white\" }}>\n                      <FontAwesomeIcon icon={faTasks} listItem /> Task\n                    </h5>\n                  </Nav.Link>\n                </LinkContainer>\n              </li>\n              <li className=\"logged-items\">\n                <LinkContainer to=\"/\">\n                  <Nav.Link className=\"sign-up\" onClick={this.props.logout}>\n                    <h5 style={{ color: \"white\" }}>\n                      <FontAwesomeIcon icon={faWalking} listItem />\n                      Logout\n                    </h5>\n                  </Nav.Link>\n                </LinkContainer>\n              </li>\n            </ul>\n          </Nav>\n        ) : (\n          <>\n            <Nav>\n              <LinkContainer to=\"/signup\">\n                <Nav.Link className=\"sign-up\">Signup</Nav.Link>\n              </LinkContainer>\n            </Nav>\n            {/* login code block */}\n            <Nav className=\"menu-form\">\n              <div id=\"login-form\" className=\"hidden\">\n                <LoginForm {...this.props} formType=\"menu\" />\n              </div>\n              {this.state.hideButton === false && (\n                <Nav.Link id=\"login\" onClick={this.toggleLoginButton}>\n                  Login\n                </Nav.Link>\n              )}\n            </Nav>\n          </>\n        )}\n      </Navbar>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function BackgroundWithOverlay(props) {\n  let background = {\n    backgroundImage:\n      \"url(\" + process.env.PUBLIC_URL + \"/images/\" + props.imgUrl,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    height: \"100%\",\n    width: \"100%\",\n    zIndex: -1,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"none\"\n  };\n\n  let overlay = {\n    backgroundColor: \"rgba(0, 0, 0, \" + props.alpha + \")\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\"\n  };\n\n  return (\n    <div style={background}>\n      <div style={overlay}></div>\n    </div>\n  );\n}\n","// Components\n/* eslint-disable */\nimport React from \"react\";\nimport Menu from \"../Menu/Menu\";\n\n// Custom Components\nimport BackgroundWithOverlay from \"../BackgroundWithOverlay/BackgroundWithOverlay\";\n\n// Styling\nimport { Jumbotron, Button, Card, CardDeck } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport \"./Landing.css\";\n\nexport default class Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    console.log(\"Render Landing\");\n    console.log(\"I am Kadus\");\n    return (\n      <>\n        {/* HERO, landing page background image */}\n        <BackgroundWithOverlay\n          imgUrl=\"estee-janssens-2enBTsIVhUU-unsplash.jpg\"\n          alpha=\".6\"\n        />\n\n        {/* welcome statement */}\n        <Jumbotron className=\"hero-container\">\n          <h1 className=\"landing-title\">\n            Get more done in your day with cloudTaskr\n          </h1>\n          <div>\n            <LinkContainer to=\"/signup\">\n              <Button>Get Started</Button>\n            </LinkContainer>\n          </div>\n        </Jumbotron>\n\n\n\n\n        \n\n\n        {/* navbar */}\n        {/* <Menu\n          id=\"landingMenuSticky\"\n          {...this.props}\n          logout={this.props.logout}\n          setUser={this.props.setUser}\n          fetchData={this.props.fetchData}\n          setFlashMessage={this.props.setFlashMessage}\n        /> */}\n\n        {/* Section 1 */}\n        <section className=\"landingWhat\">\n          <h3>What does cloudTaskr do?</h3>\n        </section>\n\n\n\n        {/* Section 2 */}\n        <section className=\"landingHow\">\n          <h3>How does cloudTaskr work?</h3>\n        </section>\n        {/* Section 3 */}\n        <section className=\"landingCall\">\n          <h3>Call to Action</h3>\n        </section>\n        {/* Footer */}\n        <footer className=\"landingFooter\">\n          <h3>Footer content</h3>\n        </footer>\n      </>\n    );\n  }\n}\n","// Components\n/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { Container, Button, Form } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport baseURL from \"../../services/base\";\n\n// Project Components\nimport Menu from \"../Menu/Menu\";\n// import actions from \"../../services/index\";\n\n// Styling\nimport \"./SignUp.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Signup extends Component {\n  // state = {\n  //   email: \"testing\"+Math.random()+\"@mail.com\",\n  //   password: \"12345678\",\n  // }\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSignUpForm = event => {\n    event.preventDefault();\n\n    if (this.state.email) {\n      let user = {\n        email: this.state.email,\n        password: this.state.password,\n        username: \"CloudTaskr\" + Math.floor(Math.random() * 500)\n      };\n\n      Axios.post(`${baseURL}/api/signup`, user, { withCredentials: true })\n        .then(response => {\n          this.setState({\n            email: \"\",\n            password: \"\"\n          });\n          this.props.history.push(\"/task\");\n          this.props.setUser(response.data);\n          // this.props.setFlashMessage(\"Sign up successful\", true)\n        })\n        .catch(err => {\n          // this.props.setFlashMessage(\"Sign up failed\", false)\n          console.log(err);\n        });\n    }\n  };\n\n  backgroundImage = {\n    backgroundImage:\n      \"url(\" +\n      process.env.PUBLIC_URL +\n      \"/images/books-business-computer-connection-459654.jpg)\"\n  };\n\n  render() {\n    let styles = {\n      borderRadius: \"20px\",\n  backgroundColor: \"#2F0152\",\n  borderColor: \"#2F0152\",\n  width: \"100px\"\n    }\n\n    return (\n      <>\n        {/* <Menu\n          id=\"landingMenuSticky\"\n          {...this.props}\n          logOut={this.props.logOut}\n          setUser={this.props.setUser}\n          fetchData={this.props.fetchData}\n          setFlashMessage={this.props.setFlashMessage}\n        /> */}\n        <div className=\"signup-back-img\" >\n        \n        <Container className=\"login-form\" style={{paddingTop:\"200px\"}}>\n          <h1>Join today!</h1>\n          <Form className=\"sign-up-form\" onSubmit={this.handleSignUpForm}>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control style={{width:\"500px\"}}\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter email\"\n                defaultValue={this.state.email}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control style={{width:\"500px\"}}\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                defaultValue={this.state.password}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <div>\n              <Button style={styles} type=\"submit\">Sign up</Button> <Link to=\"/login\">Already have an account? Login</Link>\n            </div>\n          </Form>\n        </Container>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport './loading.css'\n\nexport default class loading extends Component {\n  render() {\n    return (\n      <div className=\"bouncing-loader\">\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function Welcome(props) {\n  let welcome = () => {\n    let message, user;\n\n    if (props.userObj) {\n      user = props.userObj;\n      if (user.firstName) {\n        message = (\n          <>\n            <h2>Welcome {user.firstName}</h2>\n          </>\n        );\n      } else {\n        message = (\n          <>\n            <h2>Welcome {user.username}</h2>\n          </>\n        );\n      }\n    }\n\n    return message;\n  };\n\n  return <>{welcome()}</>;\n}\n","import React from \"react\";\nimport { FormLabel, InputGroup, Row, Col } from \"react-bootstrap\";\nimport baseURL from \"../../../services/base\";\nimport Axios from \"axios\";\n//components\n// import ZoneSearchInput from \"../../ZoneSearchInput/ZoneSearchInput\"\n\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\n\nimport \"../../../services/googleapi\";\n\n// Styling\nimport \"../Account.css\";\nimport { Form, FormControl, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faStopCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Zones extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      address: \"\",\n      zones: {\n        home: {\n          name: this.props.userObj.zones.home.name,\n          address: this.props.userObj.zones.home.address,\n          lat: this.props.userObj.zones.home.lat,\n          lng: this.props.userObj.zones.home.lng\n        },\n        work: {\n          name: this.props.userObj.zones.work.name,\n          address: this.props.userObj.zones.work.address,\n          lat: this.props.userObj.zones.work.lat,\n          lng: this.props.userObj.zones.work.lng\n        }\n      },\n      ready: true\n    };\n  }\n  handleZoneUpdate = (event, location) => {\n    event.preventDefault();\n\n    let updateZones = {\n      zones: {\n        home: {\n          name: this.state.zones.home.name,\n          address: this.state.zones.home.address,\n          lat: this.state.zones.home.lat,\n          lng: this.state.zones.home.lng\n        },\n        work: {\n          name: this.state.zones.work.name,\n          address: this.state.zones.work.address,\n          lat: this.state.zones.work.lat,\n          lng: this.state.zones.work.lng\n        }\n      }\n    };\n\n    Axios.post(`${baseURL}/api/editprofile/zones`, updateZones, {\n      withCredentials: true\n    })\n      .then(response => {\n        this.props.setUser(response.data);\n        console.log(\"Zone Updated\");\n        this.props.setFlashMessage(\"Zones are set\", true);\n        this.props.history.push(\"/account\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  clearHandleZoneChange = location => {\n    this.setState({\n      address: \"\"\n    });\n  };\n\n  handleChange = address => {\n    // console.log(address);\n    this.setState({ address: address });\n  };\n\n  handleSelect = (address, location) => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        // console.log(\"Success\", latLng);\n        if (location === \"home\") {\n          this.setState({\n            address: address,\n            zones: {\n              home: {\n                name: \"home\",\n                address: address,\n                lat: latLng.lat,\n                lng: latLng.lng\n              },\n              work: {\n                name: this.props.userObj.zones.work.name,\n                address: this.props.userObj.zones.work.address,\n                lat: this.props.userObj.zones.work.lat,\n                lng: this.props.userObj.zones.work.lng\n              }\n            }\n          });\n        }\n        if (location === \"work\") {\n          this.setState({\n            address: address,\n            zones: {\n              home: {\n                name: this.props.userObj.zones.home.name,\n                address: this.props.userObj.zones.home.address,\n                lat: this.props.userObj.zones.home.lat,\n                lng: this.props.userObj.zones.home.lng\n              },\n              work: {\n                name: \"work\",\n                address: address,\n                lat: latLng.lat,\n                lng: latLng.lng\n              }\n            }\n          });\n        }\n        // console.log(this.state);\n      })\n      .catch(error => console.error(\"Error\", error));\n  };\n  render() {\n    // console.log(this.props);\n    // console.log(this.state);\n    // console.log(\"userObj zones.name\",this.props.userObj.zones.name)\n    // console.log(\"state zones.name\",this.props.zones.name)\n    console.log(this.state.zones.home);\n    console.log(this.state);\n\n    return (\n      <Row>\n        <Col>\n          <Form\n            onSubmit={event => {\n              this.handleZoneUpdate(event, this.props.zoneName);\n            }}\n          >\n            <PlacesAutocomplete\n              name=\"address\"\n              value={this.state.address}\n              onChange={this.handleChange}\n              onSelect={address => {\n                this.handleSelect(address, this.props.zoneName);\n              }}\n            >\n              {({\n                getInputProps,\n                suggestions,\n                getSuggestionItemProps,\n                loading\n              }) => (\n                <>\n                  <FormLabel>\n                    {this.props.zoneName.toUpperCase()}:{\" \"}\n                    {this.props.zoneName===\"custom\" ? \"Custom\" : this.props.userObj.zones[this.props.zoneName].address }\n                  </FormLabel>\n                  <InputGroup>\n                    <FormControl\n                      {...getInputProps({\n                        placeholder: \"Search Places ...\",\n                        className: \"location-search-input\"\n                      })}\n                    />\n                    <FormControl\n                      type=\"hidden\"\n                      name=\"name\"\n                      value={this.state.zones.name}\n                      // defaultValue={this.props.userObj && this.props.userObj.zones.name}\n                      // onChange={e => this.handleZonesChange(e)}\n                      // placeholder=\"Home\"\n                    />\n                    <FormControl\n                      type=\"hidden\"\n                      name=\"lat\"\n                      value={this.state.zones.lat}\n                      // defaultValue={this.props.userObj && this.props.userObj.zones.lat}\n                      // onChange={e => this.handleZonesChange(e)}\n                      // placeholder=\"Enter a number\"\n                    />\n                    <FormControl\n                      type=\"hidden\"\n                      name=\"lng\"\n                      value={this.state.zones.lng}\n                      // defaultValue={this.props.userObj && this.props.userObj.zones.lng}\n                      // onChange={e => this.handleZonesChange(e)}\n                      // placeholder=\"Enter a number\"\n                    />\n\n                    <InputGroup.Append>\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={event => {\n                          this.handleZoneUpdate(event, this.props.zoneName);\n                        }}\n                      >\n                        <FontAwesomeIcon icon={faSave} /> Save\n                      </Button>\n                    </InputGroup.Append>\n                    <InputGroup.Append>\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={this.clearHandleZoneChange}\n                      >\n                        <FontAwesomeIcon icon={faStopCircle} /> Clear\n                      </Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <div className=\"autocomplete-dropdown-container\">\n                    {loading && <div>Loading...</div>}\n                    {suggestions.map(suggestion => {\n                      const className = suggestion.active\n                        ? \"suggestion-item--active\"\n                        : \"suggestion-item\";\n                      // inline style for demonstration purpose\n                      const style = suggestion.active\n                        ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                        : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                      return (\n                        <div\n                          {...getSuggestionItemProps(suggestion, {\n                            className,\n                            style\n                          })}\n                        >\n                          <span>{suggestion.description}</span>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </>\n              )}\n            </PlacesAutocomplete>\n            {/* <ZoneSearchInput /> */}\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { Container, FormLabel } from \"react-bootstrap\";\nimport baseURL from \"../../services/base\";\n\n// Custom componenets\nimport Menu from \"../Menu/Menu\";\nimport Loading from \"../Loading/Loading\";\nimport Welcome from \"../Messages/Welcome\";\nimport BackgroundWithOverlay from \"../BackgroundWithOverlay/BackgroundWithOverlay\";\n// Styling\nimport \"./Account.css\";\nimport { Form, FormControl, Button } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport Zones from \"./Zones/Zones\";\n\nlet pageBackground = {\n  backgroundImage:\n    \"url(\" + process.env.PUBLIC_URL + \"/images/light-sun-cloud-japan-45848.jpg)\"\n};\nexport default class Account extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      // zones: {\n      //   name: '',\n      //   address: '',\n      //   lat: '',\n      //   lng: \"\"\n      // },\n      ready: true\n    };\n  }\n\n  handleUsernameUpdate = event => {\n    event.preventDefault();\n\n    let update = {\n      username: this.state.username\n    };\n\n    Axios.post(`${baseURL}/api/editprofile/username`, update, {\n      withCredentials: true\n    })\n      .then(response => {\n        // this.props.history.push(\"/tasks\");\n        this.props.setUser(response.data);\n        this.props.setFlashMessage(\"Username is set\", true);\n        // this.props.getUser();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleNameUpdate = event => {\n    event.preventDefault();\n\n    let update = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName\n    };\n\n    Axios.post(`${baseURL}/api/editprofile/name`, update, {\n      withCredentials: true\n    })\n      .then(response => {\n        // this.props.history.push(\"/tasks\");\n        this.props.setUser(response.data);\n        this.props.setFlashMessage(\"Name is set\", true);\n        // this.props.getUser();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleChange = event => {\n    // console.log(this.state)\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    // if (this.props.taskDataIsReady) {\n    return (\n      <>\n        {/* <Menu\n          id=\"landingMenuSticky\"\n          {...this.props}\n          logout={this.props.logout}\n          setUser={this.props.setUser}\n        /> */}\n        {/* <BackgroundWithOverlay\n          imgUrl=\"light-sun-cloud-japan-45848.jpg\"\n          alpha=\".1\"\n        /> */}\n        <Container >\n        <div className=\"account-container\">\n          \n          <Welcome userObj={this.props.userObj} />\n          <section>\n            <Form onSubmit={this.handleUsernameUpdate}>\n              <Form.Group controlId=\"username\">\n                <FormLabel>Set a Username:</FormLabel>\n                <FormControl\n                  type=\"text\"\n                  name=\"username\"\n                  defaultValue={\n                    this.props.userObj && this.props.userObj.username\n                  }\n                  onChange={e => this.handleChange(e)}\n                  placeholder=\"Set a username\"\n                />\n              </Form.Group>\n\n              <div>\n                <Button type=\"submit\">Update</Button>\n              </div>\n            </Form>\n\n            <Form onSubmit={this.handleNameUpdate}>\n              <Form.Group controlId=\"name\">\n                <FormLabel>First Name:</FormLabel>\n                <FormControl\n                  type=\"text\"\n                  name=\"firstName\"\n                  defaultValue={\n                    this.props.userObj && this.props.userObj.firstName\n                  }\n                  onChange={e => this.handleChange(e)}\n                  placeholder=\"Enter your first name\"\n                />\n                <FormLabel>Last name:</FormLabel>\n                <FormControl\n                  type=\"text\"\n                  name=\"lastName\"\n                  defaultValue={\n                    this.props.userObj && this.props.userObj.lastName\n                  }\n                  onChange={e => this.handleChange(e)}\n                  placeholder=\"Enter your last name\"\n                />\n              </Form.Group>\n              <div>\n                <Button type=\"submit\">Update</Button>\n              </div>\n            </Form>\n\n            <hr />\n            <hr />\n\n            <Zones\n              setFlashMessage={this.props.setFlashMessage}\n              setUser={this.props.setUser}\n              userObj={this.props.userObj}\n              zoneName=\"home\"\n            />\n            <hr />\n\n            <Zones\n              setFlashMessage={this.props.setFlashMessage}\n              setUser={this.props.setUser}\n              userObj={this.props.userObj}\n              zoneName=\"work\"\n            />\n\n            <hr />\n          </section>\n\n        </div>\n        </Container>\n      </>\n    );\n    // } else {\n    //   return <Loading />;\n    // }\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport \"./Login.css\"\n\n// Custom Components\nimport BackgroundWithOverlay from \"../../Components/BackgroundWithOverlay/BackgroundWithOverlay\";\nimport LoginForm from \"../../Components/LoginForm/LoginForm\";\nimport Menu from \"../../Components/Menu/Menu\";\n\nexport default class Login extends Component {\n  checkIfUser = () => {\n    if (this.props.userObj) {\n      this.props.history.push(\"/task\");\n    }\n  };\n  render() {\n    this.checkIfUser();\n    return (\n      <>\n        {/* <Menu\n          id=\"landingMenuSticky\"\n          {...this.props}\n          logOut={this.props.logOut}\n          setUser={this.props.setUser}\n          fetchData={this.props.fetchData}\n          setFlashMessage={this.props.setFlashMessage}\n        /> */}\n        \n          {/* <BackgroundWithOverlay\n            imgUrl=\"books-business-computer-connection-459654.jpg\"\n            alpha=\".2\"\n          /> */}\n\n          <div className=\"login-back-img\">\n\n          <Container className=\"login-form\" style={{paddingTop:\"200px\"}}>\n            <h1>Welcome back!</h1>\n            <LoginForm {...this.props} \n            setFlashMessage={this.props.setFlashMessage}\n            formType=\"form\" />\n          </Container>\n          </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Col,\n  Row,\n  FormControl,\n  InputGroup,\n  Form\n} from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\n\nimport axios from \"axios\";\nimport baseURL from \"../../services/base\";\n\nexport default class addTask extends Component {\n  constructor(props) {\n    super(props);\n    this.taskInput = React.createRef();\n    this.state = {\n      title: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.taskInput.current.focus();\n  }\n\n  handleAddTask = event => {\n    event.preventDefault();\n    const title = this.state.title;\n    const duration = 60\n    if (title) {\n      axios\n        .post(\n          `${baseURL}/api/tasks`,\n          { title, duration },\n          { withCredentials: true }\n        )\n        .then(() => {\n          // this.props.getData();\n          this.props.fetchData();\n          this.props.filterList(\"active\");\n          this.props.showAddTaskMenu();\n          this.setState({ title: \"\", description: \"\" });\n          // this.props.history.push(\"/tasks\");\n        })\n        .catch(error => console.log(error));\n    }\n  };\n  handleChange = event => {\n    // console.log(event, event.target, event.target.value);\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col>\n          <Form onSubmit={this.handleAddTask}>\n            <InputGroup>\n              <FormControl\n                type=\"text\"\n                name=\"title\"\n                value={this.state.title}\n                onChange={e => this.handleChange(e)}\n                required={true}\n                placeholder=\"Add a task\"\n                aria-label=\"Add a task\"\n                aria-describedby=\"basic-addon2\"\n                ref={this.taskInput}\n              />\n              <InputGroup.Append>\n                <Button\n                  variant=\"outline-secondary\"\n                  onClick={this.handleAddTask}\n                >\n                  <FontAwesomeIcon icon={faSave} /> Save\n                </Button>\n                {/* <Button variant=\"outline-secondary\"><FontAwesomeIcon icon={} /> Cancel</Button> */}\n              </InputGroup.Append>\n            </InputGroup>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\";\nimport Menu from \"../Menu/Menu\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faTrash,\n  faEllipsisV\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AddTask from \"./addTask\";\n\nimport axios from \"axios\";\nimport baseURL from \"../../services/base\";\nimport { Alert } from \"react-bootstrap\";\n// import AddTask from \"./addTask\";\nexport default class TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddTaskMenu: false,\n      title: \"\",\n      // showDurationAlert: this.props.showDurationAlert\n    };\n  }\n\n  // filterTasksByTag = tag => {\n  //   let tasksCopy = [...this.state.listOfTasks];\n  //   let filterTasksByTag = tasksCopy.filter(eachTask => {\n  //     return eachTask.title.toLowerCase().includes(tag.toLowerCase());\n  //   });\n\n  //   this.setState({\n  //     filterTasks: filterTasksByTag\n  //   });\n  // };\n  deleteTask = taskID => {\n    console.log(taskID);\n    // axios.post(`${baseURL}/api/task/delete/${taskID}`,{withCredentials: true})\n    // .then(res=>{\n    //   this.props.fetchData()\n    //   this.props.history.push(\"/task\");\n    // })\n  };\n\n  completeTask = taskID => {\n    axios\n      .post(\n        `${baseURL}/api/task/edit/${taskID}`,\n        { status: \"complete\" },\n        { withCredentials: true }\n      )\n      .then(res => {\n        console.log(res);\n        // this.props.getData();\n        // this.setState({ title: \"\", description: \"\" });\n        this.props.fetchData();\n        // this.props.filterList(\"active\");\n      })\n      .catch(error => console.log(error));\n  };\n\n  displayAllTasks = () => {\n    // console.log(this.props.filterTaskList)\n\n    return this.props.filterTaskList.map(task => {\n      // if(task.status===\"active\"){\n      return (\n        // console.log(task.lat)\n        <Row\n          key={task._id}\n          name=\"task\"\n          // style={{\n          //   display: \"flex\",\n          //   padding: \"5px\",\n          //   justifyContent: \"space-between\"\n          // }}\n          className=\"each-task\"\n        >\n          <Col xs={2}>\n          {task.status===\"complete\" ? (<Button\n              style={{ margin: \"5px\" }}\n              onClick={() => {\n                this.completeTask(task._id);\n              }}\n              variant=\"warning\"\n            >\n              <FontAwesomeIcon icon={faCheck} />\n            </Button>):(<Button\n              style={{ margin: \"5px\" }}\n              onClick={() => {\n                this.completeTask(task._id);\n              }}\n              variant=\"outline-warning\"\n            >\n              <FontAwesomeIcon icon={faCheck} />\n            </Button>)}\n            \n          </Col>\n          <Col xs={6} className=\"task-title\" >\n            <h5>{task.title}</h5>\n          </Col>\n          {/* <Col>\n          {Math.floor(\n                    this.props.distanceFunction(\n                      this.props.userLocation.latitude,\n                      this.props.userLocation.longitude,\n                      task.zone.lat,\n                      task.zone.lng,\n                      \"N\"\n                    )\n                  )}{\" \"}\n                  miles away\n          </Col> */}\n          <Col xs={4}>\n            <Link to={\"/task/edit/\" + task._id}>\n              <Button style={{ margin: \"5px\" }}>\n                <FontAwesomeIcon icon={faEllipsisV} />\n              </Button>\n            </Link>\n            \n            <Link to={\"/task/delete/\" + task._id}>\n              <Button style={{ margin: \"5px\" }} variant=\"danger\">\n                <FontAwesomeIcon icon={faTrash} />\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        );\n      // }\n    });\n  };\n\n  addTaskMenu = () => {\n    // console.log(\"Add Task Menu\");\n    window.scrollTo(400, 0);\n    this.setState({ showAddTaskMenu: !this.state.showAddTaskMenu });\n  };\n\n  // componentDidMount() {\n  //   // if (this.props.userObj === \"\") {\n  //   //   return this.props.history.push(\"/signup\");\n  //   // } else {\n  //     this.displayAllTasks();\n  //   // }\n  // }\n\n  // notAuthorized = () => {\n  //       return this.props.history.push('/signup')\n  // }\n\n  render() {\n    console.log(\"Render taskList\");\n\n    return (\n      <div>\n      {/* <Alert show={this.props.showDurationAlert} variant=\"success\">\n        <Alert.Heading>How much free time do you have?</Alert.Heading>\n        <p>\n          Set the number of minutes you're available and we'll recommend tasks for you to complete.\n        </p>\n        <hr />\n        <div className=\"d-flex justify-content-center align-content-center\">\n          <Button onClick={()=>{this.props.filterDuration(5)}} variant=\"outline-success\">\n            5 mins\n          </Button>\n          <Button onClick={()=>{this.props.filterDuration(15)}} variant=\"outline-success\">\n            15 mins\n          </Button>\n          <Button onClick={()=>{this.props.filterDuration(30)}} variant=\"outline-success\">\n            30 mins\n          </Button>\n        </div>\n      </Alert> */}\n\n      {/* {!this.show && <Button onClick={() => this.setState({showDurationAlert: true})}>Show Alert</Button>} */}\n        {this.props.userObj ? (\n          <div>\n            \n            <Container className=\"task-list-page\">\n              {/* {this.props.userObj.firstName ? (\n                <h2>Welcome {this.props.userObj.firstName}</h2>\n              ) : (\n                <h2>Welcome {this.props.userObj.username}</h2>\n              )} */}\n\n              <Row style={{ margin: \"5px\" }}>\n                <Col sm={6}>\n                  <button\n                    onClick={this.addTaskMenu}\n                    className=\"add-task-button\"\n                  >\n                    Add a task\n                  </button>\n                </Col>\n              </Row>\n\n              {/* <button onClick={this.displayAllTasks}>Filter</button> */}\n              <Container>\n              {/* <Row><Col xs={2}>Complete</Col><Col xs={6}>Task</Col></Row> */}\n              {this.state.showAddTaskMenu ? (\n                <Row>\n                  <Col>\n                    <AddTask\n                      fetchData={this.props.fetchData}\n                      showAddTaskMenu={this.addTaskMenu}\n                      filterList={this.props.filterList}\n                    />\n                    <hr />\n                  </Col>\n                </Row>\n              ) : (\n                \"\"\n              )}\n                {this.props && this.displayAllTasks()}\n              </Container>\n              \n            </Container>\n          </div>\n        ) : (\n          <Container>\n            <h1>Not authorized, sign up to make your first task</h1>\n            <LinkContainer to=\"/signup\">\n              <Button>Sign Up</Button>\n            </LinkContainer>\n          </Container>\n        )}\n      </div>\n    );\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\";\nimport Menu from \"../Menu/Menu\";\nimport { Button, Container, Row, Card } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faTrash,\n  faEllipsisV\n} from \"@fortawesome/free-solid-svg-icons\";\nimport AddTask from \"./addTask\";\n\nimport axios from \"axios\";\nimport baseURL from \"../../services/base\";\nimport { Alert } from \"react-bootstrap\";\n\nexport default class SmartTasks extends Component {\n  render() {\n    return (\n      <div>\n        <div \n        // className={this.props.showDurationAlert ? \"show\" : \"hide\"}\n        >\n        <Card style={{ width: \"18rem\" }} >\n          <Card.Body>\n            <Card.Title>How much free time do you have?</Card.Title>\n            {/* <Card.Subtitle className=\"mb-2 text-muted\">\n              Card Subtitle\n            </Card.Subtitle> */}\n            <Card.Text>\n              Set the number of minutes you're available and we'll recommend\n              tasks for you to complete.\n            </Card.Text>\n            <Button\n              onClick={() => {\n                this.props.filterDuration(5);\n              }}\n              variant=\"outline-success\"\n            >\n              5 mins\n            </Button>\n            <Button\n              onClick={() => {\n                this.props.filterDuration(15);\n              }}\n              variant=\"outline-success\"\n            >\n              15 mins\n            </Button>\n            <Button\n              onClick={() => {\n                this.props.filterDuration(30);\n              }}\n              variant=\"outline-success\"\n            >\n              30 mins\n            </Button>\n          </Card.Body>\n        </Card>\n        </div>\n      <div className={!this.props.showHomeAlert ? \"show\" : \"hide\"}>\n        <Card style={{ width: \"18rem\" }}>\n          <Card.Body>\n            <Card.Title>You're near Home</Card.Title>\n            {/* <Card.Subtitle className=\"mb-2 text-muted\">\n              Card Subtitle\n            </Card.Subtitle> */}\n            <Card.Text>Would you like to show your tasks at home?</Card.Text>\n            <Button\n              onClick={() => {\n                this.props.filterHomeTasks(\"yes\");\n              }}\n              variant=\"outline-success\"\n            >\n              Yes\n            </Button>\n            <Button\n              onClick={() => {\n                this.props.filterHomeTasks(\"no\");\n              }}\n              variant=\"outline-danger\"\n            >\n              No\n            </Button>\n          </Card.Body>\n        </Card>\n        </div>\n        {/* <Alert show={this.props.showHomeAlert} variant=\"success\">\n        <Alert.Heading>You're near Home</Alert.Heading>\n        <p>\n          Would you like to show your tasks at home?\n        </p>\n        <hr />\n        <div className=\"d-flex justify-content-center align-content-center\">\n          <Button onClick={()=>{this.props.filterHomeTasks(\"yes\")}} variant=\"outline-success\">\n            Yes\n          </Button>\n          <Button onClick={()=>{this.props.filterHomeTasks(\"no\")}} variant=\"outline-danger\">\n            No\n          </Button>\n        </div>\n      </Alert> */}\n      <div \n      className={!this.props.showWorkAlert ? \"\" : \"hide\"}\n      >\n          \n      <Card style={{ width: \"18rem\" }} >\n          <Card.Body>\n            <Card.Title>You're near Work</Card.Title>\n            {/* <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle> */}\n            <Card.Text>Would you like to show your tasks at Work?</Card.Text>\n            <Button\n              onClick={() => {\n                this.props.filterWorkTasks(\"yes\");\n              }}\n              variant=\"outline-success\"\n            >\n              Yes\n            </Button>\n            <Button\n              onClick={() => {\n                this.props.filterWorkTasks(\"no\");\n              }}\n              variant=\"outline-danger\"\n            >\n              No\n            </Button>\n          </Card.Body>\n        </Card>\n\n      </div>\n        {/* <Alert show={this.props.toggleShowWorkAlert} variant=\"success\">\n        <Alert.Heading>You're near Work</Alert.Heading>\n        <p>\n          Would you like to show your tasks at Work?\n        </p>\n        <hr />\n        <div className=\"d-flex justify-content-center align-content-center\">\n          <Button onClick={()=>{this.props.showWorkAlert(\"yes\")}} variant=\"outline-success\">\n            Yes\n          </Button>\n          <Button onClick={()=>{this.props.showWorkAlert(\"no\")}} variant=\"outline-red\">\n            No\n          </Button>\n        </div>\n      </Alert> */}\n      </div>\n    );\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { Container, Button, FormControl } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport {\n  faInbox,\n  faHome,\n  faBriefcase,\n  faPlus,\n  faCloud,\n  faCheck\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Project Components\nimport Menu from \"../../Components/Menu/Menu\";\n// import TaskList from \"../../Containers/TaskPage/TaskList\";\nimport TaskList from \"../../Components/test-tasks/taskList\";\n// import AddTaskModal from \"../../Components/test-tasks/addTaskModal\"\n\n// Styling\nimport \"../../Components/Task/Task.css\";\nimport SmartTasks from \"../../Components/test-tasks/SmartTasks\";\n// import { LinkContainer } from \"react-router-bootstrap\";\n\n// testing calendar component\n// import Calendar from 'react-calendar';\n\nexport default class Task extends Component {\n  // state = {\n  //   allTasks: [],\n  //   displayedTasks: [],\n  //   // targetName: \"task\"\n  // };\n\n  // props.filterList = e => {\n  //   let tasks;\n  //   let count = this.props.filterTaskList.length;\n\n  //   if (count > 0) {\n  //     tasks = this.props.filterTaskList;\n  //   } else {\n  //     tasks = [];\n  //   }\n\n  //   let targetName = e.target.getAttribute(\"name\");\n\n  //   this.setState({ allTasks: [...tasks], targetName: targetName }, () => {\n  //     this.updateView();\n  //   });\n  // };\n\n  // updateView = () => {\n  //   let view = this.state.targetName;\n  //   let display;\n\n  //   switch (view) {\n  //     case \"task\":\n  //       display = this.state.allTasks;\n  //       break;\n  //     default:\n  //       display = [];\n  //   }\n\n  //   this.setState({ displayedTasks: [...display] });\n  // };\n\n  render() {\n    return (\n      <>\n        {/* <Menu\n          id=\"landingMenuSticky\"\n          {...this.props}\n          logout={this.props.logout}\n          setUser={this.props.setUser}\n          // fetchData={this.props.fetchData}\n        /> */}\n        {this.props.userObj ? (\n          <div id=\"task-page\">\n            <aside id=\"task-sidebar\">\n              <Container>\n                <FormControl\n                  placeholder=\"Search for a task\"\n                  name=\"search\"\n                  onChange={this.props.searchTasksInput}\n                  className=\"search-input\"\n                />\n                <h2 className=\"sidebar-header\">Sections</h2>\n                <ul className=\"fa-ul sidebar-group\">\n                  <li>\n                    <h4\n                      name=\"task\"\n                      className=\"sidebar-item\"\n                      onClick={() => {\n                        this.props.filterList(\"active\");\n                      }}\n                    >\n                      <FontAwesomeIcon icon={faCloud} listItem />\n                      Tasks\n                    </h4>\n                  </li>\n                  <li>\n                    <h4\n                      name=\"inbox\"\n                      className=\"sidebar-item\"\n                      onClick={() => {\n                        this.props.filterList(\"complete\");\n                      }}\n                    >\n                      <FontAwesomeIcon icon={faCheck} listItem />\n                      Completed\n                    </h4>\n                  </li>\n                </ul>\n\n                <h3 className=\"sidebar-header\">Zones</h3>\n\n                <ul className=\"fa-ul  sidebar-group\">\n                  <li>\n                    <h4\n                      name=\"home\"\n                      className=\"sidebar-item\"\n                      onClick={() => {\n                        this.props.filterList(\"home\");\n                      }}\n                    >\n                      <FontAwesomeIcon icon={faHome} listItem />\n                      Home\n                    </h4>\n                  </li>\n                  <li>\n                    <h4\n                      name=\"work\"\n                      className=\"sidebar-item\"\n                      onClick={() => {\n                        this.props.filterList(\"work\");\n                      }}\n                    >\n                      <FontAwesomeIcon icon={faBriefcase} listItem />\n                      Work\n                    </h4>\n                  </li>\n                </ul>\n                {/* \n                <h3 className=\"sidebar-header\">Tags</h3>\n                <Button id=\"add-task\">\n                  <h3>\n                    <FontAwesomeIcon icon={faPlus} />\n                  </h3>\n                </Button> */}\n              </Container>\n            </aside>\n            <section id=\"task-section\">\n              <TaskList\n                {...this.props}\n                // viewableTasks={this.state.displayedTasks}\n                // viewableTasks={this.props.filterTaskList}\n                filterList={this.props.filterList}\n                fetchData={this.props.fetchData}\n                userLocation={this.props.userLocation}\n                distanceFunction={this.props.distanceFunction}\n              />\n            </section>\n\n            <section id=\"smart-section\">\n              <SmartTasks  \n                  setFlashMessage={this.props.setFeedbackMessage}\n                  fetchData={this.props.fetchData}\n                  userLocation={this.props.userLocation}\n                  distanceFunction={this.props.distanceFunction}\n                  filterList={this.props.filterList}\n                  filterDuration={this.props.filterDuration}\n                  showDurationAlert={this.props.showDurationAlert}\n                  filterHomeTasks={this.props.filterHomeTasks}\n                  showHomeAlert={this.props.showHomeAlert} \n                  filterWorkTasks={this.props.filterWorkTasks}\n                  showWorkAlert={this.props.showWorkAlert} />\n            </section>\n          </div>\n        ) : (\n          <>\n            <h1>Not authorized, sign up to make your first task</h1>\n            <LinkContainer to=\"/signup\">\n              <Button>Sign Up</Button>\n            </LinkContainer>\n          </>\n        )}\n      </>\n    );\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from 'react'\nimport \"./navBar.css\"\n\nimport {Link} from \"react-router-dom\"\n// import SearchBox from \"../search-box/searchBox\"\n\nimport { Button } from \"react-bootstrap\";\n\nimport Axios from \"axios\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport baseURL from \"../../services/base\";\n\n// Custom Components\nimport LoginForm from \"../LoginForm/LoginForm\";\n\n// Styles\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faTasks,\n  faSignOutAlt,\n  faWalking\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      hideButton: false\n    };\n  }\n  render() {\n    return (\n      <div className=\"container-fluid nav-style\">\n\n        <div className=\"nav-left\">\n          <Link to=\"/\">\n            <img className=\"logo\" src=\"./images/logo.png\" alt=\"logo\" />\n          </Link>\n        </div>\n\n        <div className=\"nav-middle\">\n        </div>\n\n        <div className=\"nav-right\">\n        \n\n        {this.props.userObj ? \n        (<>\n          <Link to=\"/task\" className=\"nav-heading nav-heading2\">Dashboard</Link>\n          <Link to=\"/\" className=\"nav-heading\">\n            <Button variant=\"primary btn-prp\" onClick={this.props.logout}>Log out</Button>\n          </Link>\n          <Link to=\"/account\" className=\"nav-heading profile-css\">\n          <FontAwesomeIcon icon={faUser} />{\" \"}\n          </Link>\n          </>) : (<>\n            <Link to=\"/\" className=\"nav-heading nav-heading2\">Home</Link>\n          <Link to=\"/login\" className=\"nav-heading\">\n            <Button variant=\"primary btn-prp\">Login</Button>\n          </Link>\n          <Link to=\"/signup\" className=\"nav-heading\">\n            <Button variant=\"primary btn-prp\">Sign up</Button>\n          </Link>\n          </>)}\n        \n        </div>\n\n      </div>\n    )\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from 'react'\nimport { Button, FormLabel } from 'react-bootstrap'\nimport Zones from '../Account/Zones/Zones'\n\nexport default class EditTaskZone extends Component {\n\n    state = {\n        showZoneInput: false\n    }\n\n    render() {\n        return (\n            <div>\n            \n            <Button onClick={()=>{this.props.selectZone(\"home\")}} variant={\"outline-info\"} name=\"home\" active={this.props.active===\"home\" ? \"active\" : \"\"}>Home</Button>\n            <Button onClick={()=>{this.props.selectZone(\"work\")}} variant={\"outline-info\"} name=\"work\"  active={this.props.active===\"work\" ? \"active\" : \"\"}>Work</Button>\n            <Button onClick={()=>{this.props.selectZone(\"custom\")}} variant={\"outline-info\"} disabled >Custom (coming soon)</Button>\n            {this.props.showZoneInput ? ( \n                <Zones userObj={this.props.userObj} zoneName={this.props.active} />\n                ) : \"\" }\n            </div>\n        )\n    }\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\";\n// import Axios from 'axios';\n\n// import { Row } from \"react-bootstrap\";\n// import { Col } from \"react-bootstrap\";\nimport {\n  FormControl,\n  Form,\n  FormGroup,\n  FormLabel,\n  Container,\n  Button,\n  Row\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons\";\nimport Menu from \"../Menu/Menu\";\nimport axios from \"axios\";\nimport baseURL from \"../../services/base\";\nimport EditTaskZone from \"./EditTaskZone.jsx\";\n\nimport Calendar from \"react-date-picker\";\nimport DatePicker from \"react-datepicker\";\n \nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass EditTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      showZoneInput: false,\n      zone: {\n        name: \"\",\n        address: \"\",\n        lat: \"\",\n        lng: \"\"\n      },\n      status: \"\",\n      duration: \"\",\n      date: \"\",\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this);\n\n    axios\n      .get(`${baseURL}/api/task/edit/${this.props.match.params.id}`, {\n        withCredentials: true\n      })\n      .then(res => {\n        console.log(res.data);\n        this.setState(res.data);\n      });\n  }\n\n  handleUpdateTask = event => {\n    event.preventDefault();\n\n    const title = this.state.title;\n    const description = this.state.description;\n    const zone = this.state.zone;\n    const status = this.state.status;\n    const duration = this.state.duration;\n    const date = this.state.date;\n    console.log(zone);\n    axios\n      .post(\n        `${baseURL}/api/task/edit/${this.props.match.params.id}`,\n        { title, description, zone, status, duration },\n        { withCredentials: true }\n      )\n      .then(res => {\n        console.log(res);\n        // this.setState({ title: \"\", description: \"\" });\n        this.props.fetchData();\n        this.props.history.push(\"/task\");\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    // console.log(event, event.target, event.target.value);\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  selectZone = location => {\n    if (location === \"home\") {\n      // console.log(\"home\", this.state);\n      if (this.props.userObj.zones.home.address === \"\") {\n        this.setState({ showZoneInput: true, active: \"home\" });\n      } else {\n        this.setState({\n          zone: {\n            name: this.props.userObj.zones.home.name,\n            address: this.props.userObj.zones.home.address,\n            lat: this.props.userObj.zones.home.lat,\n            lng: this.props.userObj.zones.home.lng\n          },\n          showZoneInput: false,\n          active: \"home\"\n        });\n      }\n    }\n    if (location === \"work\") {\n      console.log(\"work\", this.state);\n      this.setState({\n        zone: {\n          name: this.props.userObj.zones.work.name,\n          address: this.props.userObj.zones.work.address,\n          lat: this.props.userObj.zones.work.lat,\n          lng: this.props.userObj.zones.work.lng\n        },\n        showZoneInput: false,\n        active: \"work\"\n      });\n    }\n    if (location === \"custom\") {\n      console.log(\"custom\", this.state);\n      this.toggleShowZoneInput();\n    }\n  };\n\n  toggleShowZoneInput = () => {\n    this.setState({\n      showZoneInput: !this.state.toggleShowZoneInput\n    });\n  };\n\n  setDuration = time => {\n    this.setState({\n      duration: time\n    });\n\n    // console.log(this.state.duration)\n  };\n\n  setStatus = status => {\n    this.setState({\n      status: status\n    });\n\n    console.log(this.state.duration);\n  };\n\n  handleDateChange = date => {\n    this.setState({\n      date: date\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* <Menu\n          id=\"landingMenuSticky\"\n          {...this.props}\n          logout={this.props.logout}\n          setUser={this.props.setUser}\n          fetchData={this.props.fetchData}\n        /> */}\n            <Container className=\"task-list-page\">\n          <Row>\n            <Form onSubmit={this.handleUpdateTask} className=\"edit-form\">\n              <FormLabel>\n                {\" \"}\n                <FontAwesomeIcon icon={faList} /> Title:\n              </FormLabel>\n              <FormControl\n                type=\"text\"\n                name=\"title\"\n                value={this.state.title}\n                onChange={e => this.handleChange(e)}\n                required\n              />\n              <hr />\n              <FormLabel>Description:</FormLabel>\n              <FormControl\n                type=\"text\"\n                name=\"description\"\n                value={this.state.description}\n                onChange={e => this.handleChange(e)}\n              />\n              <hr />\n              <FormLabel>\n                Zone:{\" \"}\n                {this.state.zone.name === \"\"\n                  ? \"\"\n                  : this.state.zone.name.toUpperCase()}{\" \"}\n                - {this.state.zone.name === \"\" ? \"\" : this.state.zone.address}\n              </FormLabel>\n              <EditTaskZone\n                userObj={this.props.userObj}\n                showZoneInput={this.state.showZoneInput}\n                selectZone={this.selectZone}\n                active={\n                  this.state.active === \"\"\n                    ? this.state.zone.name\n                    : this.state.active\n                }\n              />\n              <hr />\n              <FormLabel>Duration:</FormLabel>\n              {/* <FormControl\n              type=\"number\"\n              name=\"duration\"\n              value={this.state.duration}\n              onChange={e => this.handleChange(e)}\n            />\n            Minutes */}\n\n              <Button\n                onClick={() => {\n                  this.setDuration(5);\n                }}\n                variant={\"outline-info\"}\n                active={this.state.duration === \"5\" ? \"active\" : \"\"}\n              >\n                5 mins\n              </Button>\n              <Button\n                onClick={() => {\n                  this.setDuration(15);\n                }}\n                variant={\"outline-info\"}\n                active={this.state.duration === \"15\" ? \"active\" : \"\"}\n              >\n                15 mins\n              </Button>\n              <Button\n                onClick={() => {\n                  this.setDuration(30);\n                }}\n                variant={\"outline-info\"}\n                active={this.state.duration === \"30\" ? \"active\" : \"\"}\n              >\n                30 mins\n              </Button>\n              <Button\n                onClick={() => {\n                  this.setDuration(60);\n                }}\n                variant={\"outline-info\"}\n                active={this.state.duration === \"60\" ? \"active\" : \"\"}\n              >\n                60 mins\n              </Button>\n              <hr />\n              <FormLabel>Status:</FormLabel>\n              {/* <FormControl\n              type=\"text\"\n              name=\"status\"\n              value={this.state.status}\n              onChange={e => this.handleChange(e)}\n            /> */}\n\n            <Button\n              onClick={() => {\n                this.setStatus(\"active\");\n              }}\n              variant={\"outline-danger\"}\n              active={this.state.status === \"active\" ? \"active\" : \"\"}\n            >\n              Active\n            </Button>\n            <Button\n              onClick={() => {\n                this.setStatus(\"complete\");\n              }}\n              variant={\"outline-success\"}\n              active={this.state.status === \"complete\" ? \"active\" : \"\"}\n            >\n              Complete\n            </Button>\n            <hr />\n            <FormLabel>Due Date: (Coming soon)</FormLabel>\n            {/* <FormControl\n              type=\"text\"\n              name=\"date\"\n              value={this.state.date}\n              onChange={e => this.handleChange(e)}\n            /> */}\n\n            <DatePicker name=\"date\"\n        selected={this.state.date}\n        onChange={this.handleDateChange}\n        autoComplete=\"no\"\n      />\n\n              <hr />\n              <FormGroup>\n                <button className=\"btn btn-warning\">Update</button>\n              </FormGroup>\n            </Form>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default EditTask;\n","import React from \"react\";\nimport axios from \"axios\";\nimport baseURL from \"../../services/base\";\nimport Loading from \"../Loading/Loading\";\n\nexport default class deleteTask extends React.Component {\n  componentDidMount() {\n    axios\n      .delete(`${baseURL}/api/task/delete/${this.props.match.params.id}`, {\n        withCredentials: true\n      })\n      .then(() => {\n        // this.props.getData();\n        // this.setState({ title: \"\", description: \"\" });\n        this.props.fetchData();\n        this.props.history.push(\"/task\");\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    return (<div><Loading /></div>);\n  }\n}\n","/* eslint-disable */\nimport React, { Component } from \"react\";\nimport \"./styling.css\";\n\n// import NavBar from \"./navBar\";\nimport { Link } from \"react-router-dom\";\n\nimport { Jumbotron, Button } from \"react-bootstrap\";\n\nexport default class Style extends Component {\n  render() {\n    return (\n      <div>\n        {/* <NavBar id=\"landingMenuSticky\" {...this.props}\n          logout={this.props.logout}\n          setUser={this.props.setUser}\n          fetchData={this.props.fetchData}\n          setFlashMessage={this.props.setFlashMessage}/> */}\n\n        <div className=\"landing-home\">\n          <div className=\"welcome\">\n            <h1>To-Do Lists, Tasks, Reminders & more</h1>\n            <p>\n              Reprogram your brain and automate the important rituals in your\n              life so you have more time for what really matters.\n            </p>\n            <p>\n              <Link to=\"/signup\">\n                <Button variant=\"primary btn-prp2\">Try it for Free</Button>\n              </Link>\n            </p>\n          </div>\n\n          <div className=\"bg-img\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n","// NPM Installs\n/* eslint-disable */\nimport React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport baseURL from \"./services/base\";\n\n// Project Components\nimport Landing from \"./Components/Landing/Landing\";\nimport Signup from \"./Components/SignUp/Signup\";\nimport Account from \"./Components/Account/Account\";\nimport LogIn from \"./Containers/LoginPage/Login\";\n// import LogInTest from \"./Components/Login/Login\";\nimport Task from \"./Containers/TaskPage/Task\";\n\n// Testing Components\nimport NavBar from \"./Components/css/navBar\";\nimport TaskList from \"./Components/test-tasks/taskList\";\nimport AddTask from \"./Components/test-tasks/addTask\";\nimport EditTask from \"./Components/test-tasks/editTask\";\nimport DeleteTask from \"./Components/test-tasks/deleteTask\";\n// import CompleteTask from \"./Components/test-tasks/completeTask\";\nimport Loading from \"./Components/Loading/Loading\";\n\nimport { Navbar, Container } from \"react-bootstrap\";\nimport Style from \"./Components/css/styling\";\n\n// Styling\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Alert } from \"react-bootstrap\";\n// import iplocation from \"iplocation\";\n// import publicIp from \"public-ip\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userLoggedIn: null,\n      listOfTasks: [],\n      filterTaskList: [],\n      taskDataIsReady: false,\n      errorMsg: null,\n      successMsg: null,\n      apiIsAwake: false,\n      userLocation: {\n        latitude: 0,\n        longitude: 0\n      },\n      showDurationAlert: true,\n      countDurationAlert: 0,\n      showHomeAlert: false,\n      countHomeAlert: 0,\n      showWorkAlert: false,\n      countWorkAlert: 0,\n    };\n  }\n\n  /**\n   * after the first render react will run the functions in componentDidMount()\n   * any time setState() is called React will render the components again\n   */\n  async componentDidMount() {\n    console.log(\"Mount App\");\n    this.getUser();\n    this.getUserLocation();\n    // this.checkUserDistance();\n    //=> 'fe80::200:f8ff:fe21:67cf'\n  }\n\n  checkUserDistance = () => {\n   let homeDistance = Math.floor(\n      this.props.distanceFunction(\n        this.props.userLocation.latitude,\n        this.props.userLocation.longitude,\n        this.state.userObj.zones.home.lat,\n        this.state.userObj.zones.home.lng,\n        \"N\"\n      )\n    )\n    if(homeDistance <= 5 ){\n      if(this.state.countHomeAlert===0){\n      this.setState({showHomeAlert: true, countHomeAlert: 1})\n    }\n  }\n\n    let workDistance = Math.floor(\n      this.props.distanceFunction(\n        this.props.userLocation.latitude,\n        this.props.userLocation.longitude,\n        this.state.userObj.zones.work.lat,\n        this.state.userObj.zones.work.lng,\n        \"N\"\n      )\n    )\n    \n    if(workDistance <= 5 || this.state.countWorkAlert===0){\n      this.setState({showWorkAlert: true, countWorkAlert: 1})\n    }\n  \n  }\n\n  getUserLocation = () => {\n    let geo_success = position => {\n      this.setState({\n        userLocation: {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        }\n      });\n    };\n\n    let geo_error = () => {\n      console.log(\"Sorry, no position available.\");\n    };\n\n    let geo_options = {\n      enableHighAccuracy: true,\n      maximumAge: 30000,\n      timeout: 7000\n    };\n\n    navigator.geolocation.getCurrentPosition(\n      geo_success,\n      geo_error,\n      geo_options\n    );\n  };\n\n  // calculate distance of user and task zone lat/lng\n  distanceFunction = (lat1, lon1, lat2, lon2, unit) => {\n    if (lat1 === lat2 && lon1 === lon2) {\n      return 0;\n    } else {\n      var radlat1 = (Math.PI * lat1) / 180;\n      var radlat2 = (Math.PI * lat2) / 180;\n      var theta = lon1 - lon2;\n      var radtheta = (Math.PI * theta) / 180;\n      var dist =\n        Math.sin(radlat1) * Math.sin(radlat2) +\n        Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n      if (dist > 1) {\n        dist = 1;\n      }\n      dist = Math.acos(dist);\n      dist = (dist * 180) / Math.PI;\n      dist = dist * 60 * 1.1515;\n      if (unit === \"K\") {\n        dist = dist * 1.609344;\n      }\n      if (unit === \"N\") {\n        dist = dist * 0.8684;\n      }\n      return dist;\n    }\n  };\n\n  filterDuration = time => {\n    let tasksListCopy = [...this.state.listOfTasks];\n    let filteredTasks = tasksListCopy.filter(\n      eachTask => eachTask.duration <= time\n    );\n\n    this.setState({\n      filterTaskList: filteredTasks,\n      showDurationAlert: false,\n      countDurationAlert: 1\n    });\n  };\n  filterHomeTasks = (arg) => {\n    if(arg===\"yes\"){\n\n      let tasksListCopy = [...this.state.listOfTasks];\n      let filteredTasks = tasksListCopy.filter(\n        eachTask => eachTask.zone.name === \"home\"\n        );\n        \n        this.setState({\n          filterTaskList: filteredTasks,\n          showHomeAlert: false,\n          countHomeAlert: 1\n        });\n      }\n      else {\n        this.setState({\n          filterTaskList: this.state.listOfTasks,\n          showHomeAlert: false,\n          countHomeAlert: 1\n        });\n      }\n  };\n  filterWorkTasks = (arg) => {\n    if(arg===\"yes\"){\n\n      let tasksListCopy = [...this.state.listOfTasks];\n      let filteredTasks = tasksListCopy.filter(\n        eachTask => eachTask.zone.name === \"work\"\n        );\n        \n        this.setState({\n          filterTaskList: filteredTasks,\n          showWorkAlert: false,\n          countWorkAlert: 1\n        });\n      }\n      else {\n        this.setState({\n          filterTaskList: this.state.listOfTasks,\n          showWorkAlert: false,\n          countWorkAlert: 1\n        });\n      }\n  };\n\n  \n\n  /**\n   * make call to server to get the user data and save to set state\n   */\n  getUser = () => {\n    Axios.get(`${baseURL}/api/isLoggedIn`, { withCredentials: true })\n      .then(res => {\n        // if there is a user logged in then fetch the user data and set the state\n        if (res.data) {\n          this.setUser(res.data);\n          this.fetchData();\n          // this.setFeedbackMessage(\n          //   `${res.data.username} successfully logged in`,\n          //   true\n          // );\n          // this.setFeedbackMessage(`${res.data.username} successfully logged in`, true);\n          setTimeout(() => {\n            this.setState({ apiIsAwake: true });\n          }, 4000);\n        } else {\n          // this.setFeedbackMessage(`No user is currently logged in`, false);\n          setTimeout(() => {\n            this.setState({ apiIsAwake: true });\n          }, 4000);\n        }\n        this.setState({ apiIsAwake: true });\n      })\n      .catch(err => {\n        this.setFeedbackMessage(\n          `Failed to verify if there is a user logged in. Error: ${err}`,\n          false\n        );\n      });\n  };\n\n  /**\n   * make call to server to fetch user tasks and save to set state\n   */\n  fetchData = () => {\n    Axios.get(`${baseURL}/api/tasks`, { withCredentials: true })\n      .then(res => {\n        this.setState({\n          listOfTasks: res.data,\n          filterTaskList: res.data,\n          taskDataIsReady: true\n        });\n        // this.setFeedbackMessage(`User's data was successfully fetched`, true);\n      })\n      .catch(err => {\n        this.setFeedbackMessage(\n          `Failed to retrieve user data. Error: ${err}`,\n          false\n        );\n      });\n  };\n\n  filterList = tag => {\n    if (tag === \"complete\") {\n      let tasksListCopy = [...this.state.listOfTasks];\n      let filteredTasks = tasksListCopy.filter(\n        eachTask => eachTask.status === \"complete\"\n      );\n\n      this.setState({\n        filterTaskList: filteredTasks\n      });\n    }\n    if (tag === \"active\") {\n      let tasksListCopy = [...this.state.listOfTasks];\n      let filteredTasks = tasksListCopy.filter(eachTask => eachTask.status===\"active\")\n\n      this.setState({\n        filterTaskList: filteredTasks\n      });\n    }\n\n    if (tag === \"home\") {\n      let tasksListCopy = [...this.state.listOfTasks];\n      let filteredTasks = tasksListCopy.filter(eachTask => {\n        return eachTask.zone.name.toLowerCase().includes(\"home\");\n      });\n\n      this.setState({\n        filterTaskList: filteredTasks\n      });\n    }\n    if (tag === \"work\") {\n      let tasksListCopy = [...this.state.listOfTasks];\n      let filteredTasks = tasksListCopy.filter(eachTask => {\n        return eachTask.zone.name.toLowerCase().includes(\"work\");\n      });\n\n      this.setState({\n        filterTaskList: filteredTasks\n      });\n    }\n  };\n\n  /**\n   * save the user data to the state\n   */\n  setUser = userObj => {\n    this.setState({\n      userLoggedIn: userObj\n    });\n  };\n\n  /**\n   * logout the user from the backend and delete all user data from state\n   */\n  logout = () => {\n    Axios.get(`${baseURL}/api/logout`, { withCredentials: true })\n      .then(res => {\n        this.setUser(null);\n        this.setState({\n          listOfTasks: [],\n          filterTaskList: [],\n          taskDataIsReady: false\n        });\n        this.setFeedbackMessage(`${res.data.message}`, true);\n      })\n      .catch(err => {\n        this.setFeedbackMessage(`Failed to logout user. Error: ${err}`, false);\n      });\n  };\n\n  /**\n   * displays flash messages to the user\n   * maybe later we can make this a component but you still will need something in state\n   * to decide when to show the component so is it worth it to make a component\n   */\n  setFeedbackMessage = (message, itIsSuccess) => {\n    if (itIsSuccess) {\n      this.setState({\n        successMsg: message\n      });\n    } else {\n      this.setState({\n        errorMsg: message\n      });\n    }\n\n    // only display message for x amount of time\n    setTimeout(() => {\n      this.setState({\n        errorMsg: null,\n        successMsg: null\n      });\n    }, 3000);\n  };\n\n  /**\n   * filter the tasks list based on the search input and save the filtered list to state\n   */\n  searchTaskInput = e => {\n    const currentSearchValue = e.target.value;\n    let tasksListCopy = [...this.state.listOfTasks];\n    let filteredTasks = tasksListCopy.filter(eachTask => {\n      return eachTask.title\n        .toLowerCase()\n        .includes(currentSearchValue.toLowerCase());\n    });\n\n    this.setState({\n      filterTaskList: filteredTasks\n    });\n  };\n\n  render() {\n    console.log(\"Render App\", this.state.apiIsAwake);\n\n    if (this.state.apiIsAwake) {\n      return (\n        <>\n          <NavBar\n            id=\"landingMenuSticky\"\n            {...this.props}\n            userObj={this.state.userLoggedIn}\n            logout={this.logout}\n            setUser={this.setUser}\n            fetchData={this.fetchData}\n            setFlashMessage={this.setFeedbackMessage}\n          />\n\n          {this.state.successMsg && (\n            <Alert variant={\"success\"}>{this.state.successMsg}</Alert>\n          )}\n\n          {this.state.errorMsg && (\n            <Alert variant={\"danger\"}>{this.state.errorMsg}</Alert>\n          )}\n\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Style\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  fetchData={this.fetchData}\n                  setFlashMessage={this.setFeedbackMessage}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/d\"\n              render={props => (\n                <Landing\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  fetchData={this.fetchData}\n                  setFlashMessage={this.setFeedbackMessage}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={props => (\n                <Signup\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  setFlashMessage={this.setFeedbackMessage}\n                  fetchData={this.fetchData}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={props => (\n                <LogIn\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  fetchData={this.fetchData}\n                  setFlashMessage={this.setFeedbackMessage}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/account\"\n              render={props => (\n                <Account\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  getUser={this.getUser}\n                  setFlashMessage={this.setFeedbackMessage}\n                  setUser={this.setUser}\n                  taskDataIsReady={this.state.taskDataIsReady}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/task\"\n              render={props => (\n                <Task\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  ready={this.state.ready}\n                  filterTaskList={this.state.filterTaskList}\n                  searchTasksInput={this.searchTaskInput}\n                  setFlashMessage={this.setFeedbackMessage}\n                  fetchData={this.fetchData}\n                  userLocation={this.state.userLocation}\n                  distanceFunction={this.distanceFunction}\n                  filterList={this.filterList}\n                  filterDuration={this.filterDuration}\n                  showDurationAlert={this.state.showDurationAlert}\n                  filterHomeTasks={this.filterHomeTasks}\n                  showHomeAlert={this.state.showHomeAlert}\n                  filterWorkTasks={this.filterWorkTasks}\n                  showWorkAlert={this.state.showWorkAlert}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/tasks\"\n              render={props => (\n                <TaskList\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  filterTaskList={this.state.filterTaskList}\n                  searchTasksInput={this.searchTaskInput}\n                  setFlashMessage={this.setFeedbackMessage}\n                  fetchData={this.fetchData}\n                  userLocation={this.state.userLocation}\n                  distanceFunction={this.distanceFunction}\n                />\n              )}\n            />\n            \n            <Route\n              exact\n              path=\"/task/add\"\n              render={props => (\n                <AddTask\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  logout={this.logout}\n                  setUser={this.setUser}\n                  filterTaskList={this.state.filterTaskList}\n                  searchTasksInput={this.searchTaskInput}\n                  fetchData={this.fetchData}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/task/edit/:id\"\n              render={props => (\n                <EditTask\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  fetchData={this.fetchData}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/task/delete/:id\"\n              render={props => (\n                <DeleteTask\n                  {...props}\n                  userObj={this.state.userLoggedIn}\n                  fetchData={this.fetchData}\n                />\n              )}\n            />\n          </Switch>\n        </>\n      );\n    } else {\n      return <Loading />;\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory({})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\nimport history from \"./history\";\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <App history={history} />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}